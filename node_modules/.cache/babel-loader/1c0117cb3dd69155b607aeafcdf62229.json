{"ast":null,"code":"import _regeneratorRuntime from \"/workspace/reactjs-ecom-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/workspace/reactjs-ecom-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"/workspace/reactjs-ecom-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nconst config = {\n  apiKey: \"AIzaSyCStKRSqnDamb8CFHAcuFnmSCSTK3u87Aw\",\n  authDomain: \"crwn-db-69d1d.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-69d1d.firebaseio.com\",\n  projectId: \"crwn-db-69d1d\",\n  storageBucket: \"crwn-db-69d1d.appspot.com\",\n  messagingSenderId: \"781459866538\",\n  appId: \"1:781459866538:web:4d2a88c15b04f9e89761d3\"\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(config);\n}\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;\nexport const createUserProfileDocument = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(userAuth, additionalData) {\n    var userRef, snapShot, displayName, email, createdAt;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (userAuth) {\n            _context.next = 2;\n            break;\n          }\n\n          return _context.abrupt(\"return\");\n\n        case 2:\n          userRef = firestore.doc(\"users/\".concat(userAuth.uid));\n          _context.next = 5;\n          return userRef.get();\n\n        case 5:\n          snapShot = _context.sent;\n\n          if (snapShot.exists) {\n            _context.next = 17;\n            break;\n          }\n\n          displayName = userAuth.displayName, email = userAuth.email;\n          createdAt = new Date();\n          _context.prev = 9;\n          _context.next = 12;\n          return userRef.set(_objectSpread({\n            displayName,\n            email,\n            createdAt\n          }, additionalData));\n\n        case 12:\n          _context.next = 17;\n          break;\n\n        case 14:\n          _context.prev = 14;\n          _context.t0 = _context[\"catch\"](9);\n          console.log(\"error creating user\", _context.t0.message);\n\n        case 17:\n          return _context.abrupt(\"return\", userRef);\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[9, 14]]);\n  }));\n\n  return function createUserProfileDocument(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/workspace/reactjs-ecom-app/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","apps","length","initializeApp","auth","firestore","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","createUserProfileDocument","userAuth","additionalData","userRef","doc","uid","get","snapShot","exists","displayName","email","createdAt","Date","set","console","log","message"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,+BAFC;AAGbC,EAAAA,WAAW,EAAE,sCAHA;AAIbC,EAAAA,SAAS,EAAE,eAJE;AAKbC,EAAAA,aAAa,EAAE,2BALF;AAMbC,EAAAA,iBAAiB,EAAE,cANN;AAObC,EAAAA,KAAK,EAAE;AAPM,CAAf;;AAUA,IAAI,CAACR,QAAQ,CAACS,IAAT,CAAcC,MAAnB,EAA2B;AACzBV,EAAAA,QAAQ,CAACW,aAAT,CAAuBV,MAAvB;AACD;;AAED,OAAO,MAAMW,IAAI,GAAGZ,QAAQ,CAACY,IAAT,EAAb;AACP,OAAO,MAAMC,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;AAEP,MAAMC,QAAQ,GAAG,IAAId,QAAQ,CAACY,IAAT,CAAcG,kBAAlB,EAAjB;AAEAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAMN,IAAI,CAACO,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAed,QAAf;AAEA,OAAO,MAAMoB,yBAAyB;AAAA,sEAAG,iBAAOC,QAAP,EAAiBC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,cAClCD,QADkC;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAEjCE,UAAAA,OAFiC,GAEvBV,SAAS,CAACW,GAAV,iBAAuBH,QAAQ,CAACI,GAAhC,EAFuB;AAAA;AAAA,iBAGhBF,OAAO,CAACG,GAAR,EAHgB;;AAAA;AAGjCC,UAAAA,QAHiC;;AAAA,cAKlCA,QAAQ,CAACC,MALyB;AAAA;AAAA;AAAA;;AAM7BC,UAAAA,WAN6B,GAMNR,QANM,CAM7BQ,WAN6B,EAMhBC,KANgB,GAMNT,QANM,CAMhBS,KANgB;AAO/BC,UAAAA,SAP+B,GAOnB,IAAIC,IAAJ,EAPmB;AAAA;AAAA;AAAA,iBAU7BT,OAAO,CAACU,GAAR;AACJJ,YAAAA,WADI;AAEJC,YAAAA,KAFI;AAGJC,YAAAA;AAHI,aAIDT,cAJC,EAV6B;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAiBnCY,UAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC,YAAMC,OAAzC;;AAjBmC;AAAA,2CAoBhCb,OApBgC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAzBH,yBAAyB;AAAA;AAAA;AAAA,GAA/B","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyCStKRSqnDamb8CFHAcuFnmSCSTK3u87Aw\",\r\n  authDomain: \"crwn-db-69d1d.firebaseapp.com\",\r\n  databaseURL: \"https://crwn-db-69d1d.firebaseio.com\",\r\n  projectId: \"crwn-db-69d1d\",\r\n  storageBucket: \"crwn-db-69d1d.appspot.com\",\r\n  messagingSenderId: \"781459866538\",\r\n  appId: \"1:781459866538:web:4d2a88c15b04f9e89761d3\"\r\n};\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(config);\r\n}\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nprovider.setCustomParameters({ prompt: \"select_account\" });\r\n\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n  if (!userAuth) return;\r\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n  const snapShot = await userRef.get();\r\n\r\n  if (!snapShot.exists) {\r\n    const { displayName, email } = userAuth;\r\n    const createdAt = new Date();\r\n\r\n    try {\r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        ...additionalData\r\n      });\r\n    } catch (error) {\r\n      console.log(\"error creating user\", error.message);\r\n    }\r\n  }\r\n  return userRef;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}